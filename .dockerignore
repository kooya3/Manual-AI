# flyctl launch added from .gitignore
**/.DS_Store

# Byte-compiled / optimized / DLL files
**/__pycache__
**/*.py[cod]
**/*$py.class

# C extensions
**/*.so

# Distribution / packaging
**/.Python
**/build
**/develop-eggs
**/dist
**/downloads
**/eggs
**/.eggs
**/lib64
**/parts
**/sdist
**/var
**/wheels
**/share/python-wheels
**/*.egg-info
**/.installed.cfg
**/*.egg
**/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
**/*.manifest
**/*.spec

# Installer logs
**/pip-log.txt
**/pip-delete-this-directory.txt

# Unit test / coverage reports
**/htmlcov
**/.tox
**/.nox
**/.coverage
**/.coverage.*
**/.cache
**/nosetests.xml
**/coverage.xml
**/*.cover
**/*.py,cover
**/.hypothesis
**/.pytest_cache
**/cover

# Translations
**/*.mo
**/*.pot

# Django stuff:
**/*.log
**/local_settings.py
**/db.sqlite3
**/db.sqlite3-journal

# Flask stuff:
**/instance
**/.webassets-cache

# Scrapy stuff:
**/.scrapy

# Sphinx documentation
**/docs/_build

# PyBuilder
**/.pybuilder
**/target

# Jupyter Notebook
**/.ipynb_checkpoints

# IPython
**/profile_default
**/ipython_config.py

**/test

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
**/.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
**/__pypackages__

# Celery stuff
**/celerybeat-schedule
**/celerybeat.pid

# SageMath parsed files
**/*.sage.py

# Environments
**/.env
**/.venv
**/env
**/venv
**/ENV
**/env.bak
**/venv.bak

# Spyder project settings
**/.spyderproject
**/.spyproject

# Rope project settings
**/.ropeproject

# mkdocs documentation
site

# mypy
**/.mypy_cache
**/.dmypy.json
**/dmypy.json

# Pyre type checker
**/.pyre

# pytype static type analyzer
**/.pytype

# Cython debug symbols
**/cython_debug

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

threads
**/state.json
workspace
workspace/*
workspace/**

**/*.venvy/*
**/*.venvy*

# SQLite
**/*.db

# .DS_Store files
**/.DS_Store
**/**/.DS_Store
**/.aider*
**/supabase/.temp/cli-latest
**/supabase/.temp/gotrue-version
**/supabase/.temp/pooler-url
**/supabase/.temp/postgres-version
**/supabase/.temp/project-ref
**/supabase/.temp/rest-version
**/supabase/.temp/storage-version

**/**/.prompts
**/**/__pycache__


**/.env.scripts

# flyctl launch added from backend/.gitignore
backend/**/.DS_Store

# Byte-compiled / optimized / DLL files
backend/**/__pycache__
backend/**/*.py[cod]
backend/**/*$py.class

# C extensions
backend/**/*.so

# Distribution / packaging
backend/**/.Python
backend/**/build
backend/**/develop-eggs
backend/**/dist
backend/**/downloads
backend/**/eggs
backend/**/.eggs
backend/**/lib
backend/**/lib64
backend/**/parts
backend/**/sdist
backend/**/var
backend/**/wheels
backend/**/share/python-wheels
backend/**/*.egg-info
backend/**/.installed.cfg
backend/**/*.egg
backend/**/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
backend/**/*.manifest
backend/**/*.spec

# Installer logs
backend/**/pip-log.txt
backend/**/pip-delete-this-directory.txt

# Unit test / coverage reports
backend/**/htmlcov
backend/**/.tox
backend/**/.nox
backend/**/.coverage
backend/**/.coverage.*
backend/**/.cache
backend/**/nosetests.xml
backend/**/coverage.xml
backend/**/*.cover
backend/**/*.py,cover
backend/**/.hypothesis
backend/**/.pytest_cache
backend/**/cover

# Translations
backend/**/*.mo
backend/**/*.pot

# Django stuff:
backend/**/*.log
backend/**/local_settings.py
backend/**/db.sqlite3
backend/**/db.sqlite3-journal

# Flask stuff:
backend/**/instance
backend/**/.webassets-cache

# Scrapy stuff:
backend/**/.scrapy

# Sphinx documentation
backend/**/docs/_build

# PyBuilder
backend/**/.pybuilder
backend/**/target

# Jupyter Notebook
backend/**/.ipynb_checkpoints

# IPython
backend/**/profile_default
backend/**/ipython_config.py

backend/**/test

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
backend/**/.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
backend/**/__pypackages__

# Celery stuff
backend/**/celerybeat-schedule
backend/**/celerybeat.pid

# SageMath parsed files
backend/**/*.sage.py

# Environments
backend/**/.env
backend/**/.venv
backend/**/env
backend/**/venv
backend/**/ENV
backend/**/env.bak
backend/**/venv.bak

# Spyder project settings
backend/**/.spyderproject
backend/**/.spyproject

# Rope project settings
backend/**/.ropeproject

# mkdocs documentation
backend/site

# mypy
backend/**/.mypy_cache
backend/**/.dmypy.json
backend/**/dmypy.json

# Pyre type checker
backend/**/.pyre

# pytype static type analyzer
backend/**/.pytype

# Cython debug symbols
backend/**/cython_debug

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

backend/threads
backend/**/state.json
backend/workspace
backend/workspace/*
backend/workspace/**



# SQLite
backend/**/*.db

backend/**/.env.scripts

# flyctl launch added from backend/supabase/.gitignore
# Supabase
backend/supabase/**/.branches
backend/supabase/**/.temp

# dotenvx
backend/supabase/**/.env.keys
backend/supabase/**/.env.local
backend/supabase/**/.env.*.local

# flyctl launch added from frontend/.gitignore
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.
frontend/**/.env
frontend/**/.env.local
frontend/**/frontend/.env
# dependencies
frontend/node_modules
frontend/.pnp
frontend/**/.pnp.js
frontend/**/.yarn/install-state.gz

# testing
frontend/coverage

# next.js
frontend/.next
frontend/out

# production
frontend/build

# misc
frontend/**/.DS_Store
frontend/**/*.pem

# debug
frontend/**/npm-debug.log*
frontend/**/yarn-debug.log*
frontend/**/yarn-error.log*

# local env files
frontend/**/.env*.local
!frontend/**/.env.local.example

# vercel
frontend/**/.vercel

# typescript
frontend/**/*.tsbuildinfo
frontend/**/next-env.d.ts

# supabase for testing
frontend/**/supabase/.branches
frontend/**/supabase/.temp
frontend/**/supabase/**/*.env
frontend/**/**/.prompts
frontend/**/**/__pycache__
fly.toml
